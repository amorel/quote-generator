{
  "name": "quote-generator",
  "version": "1.0.0",
  "private": true,
  "workspaces": [
    "shared",
    "services/*"
  ],
  "scripts": {
    "start": "docker compose up",
    "start:build": "docker compose up --build",

    "install:all": "npm install && npm run install:services",
    "install:services": "npm run install:shared && npm run install:auth && npm run install:quote && npm run install:gateway && npm run install:frontend",
    "install:shared": "cd shared && npm install",
    "install:auth": "cd services/auth-service && npm install",
    "install:quote": "cd services/quote-service && npm install",
    "install:gateway": "cd services/api-gateway && npm install", 
    "install:frontend": "cd services/frontend && npm install",

    "build": "npm run build:all",
    "build:all": "npm run build:shared && npm run build:services && npm run build:frontend",
    "build:shared": "cd shared && npm run build",
    "build:services": "npm run build:auth && npm run build:quote && npm run build:user && npm run build:gateway",
    "build:auth": "cd services/auth-service && npm run build",
    "build:quote": "cd services/quote-service && npm run build",
    "build:user": "dotnet build ./services/user-service/user-service.sln",
    "build:gateway": "cd services/api-gateway && npm run build", 
    "build:frontend": "cd services/frontend && npm run build",

    "dev:all:win": "start npm run dev:auth && start npm run dev:quote && start npm run dev:user && start npm run dev:gateway && start npm run dev:frontend",
    "dev:quote": "cd services/quote-service && npm run dev",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:user": "cd services/user-service/src/UserService.API && dotnet watch run",
    "dev:gateway": "cd services/api-gateway && npm run dev",
    "dev:frontend": "cd services/frontend && npm run dev",

    "test": "npm run test:all",
    "test:all": "npm run test:auth && npm run test:quote && npm run test:user && npm run test:gateway && npm run test:frontend",
    "test:auth": "cd services/auth-service && npm run test:coverage",
    "test:quote": "cd services/quote-service && npm run test:coverage",
    "test:user": "dotnet test ./services/user-service/user-service.sln",
    "test:gateway": "cd services/api-gateway && npm run test:coverage",
    "test:frontend": "cd services/frontend && npm run test:coverage",

    "clean": "npm run clean:all",
    "clean:all": "npm run clean:dist && npm run clean:modules",
    "clean:dist": "rimraf \"./services/*/dist\" \"./shared/dist\"",
    "clean:modules": "rimraf \"./node_modules\" \"./services/*/node_modules\" \"./shared/node_modules\" \"./services/user-service/**/bin\" \"./services/user-service/**/obj\"",

    "lint": "npm run lint:all",
    "lint:all": "npm run lint:auth && npm run lint:quote && npm run lint:gateway && npm run lint:frontend",
    "lint:auth": "cd services/auth-service && npm run lint",
    "lint:quote": "cd services/quote-service && npm run lint",
    "lint:gateway": "cd services/api-gateway && npm run lint",
    "lint:frontend": "cd services/frontend && npm run lint",

    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down",
    "docker:clean": "docker-compose down -v",

    "dev": "docker compose --env-file .env.development up",
    "dev:build": "docker compose --env-file .env.development up --build",
    "prod": "docker compose --env-file .env up",
    "prod:build": "docker compose --env-file .env up --build",

    "start:services": "npm run start:auth && npm run start:quote && npm run start:user && npm run start:gateway",
    "start:auth": "cd services/auth-service && npm start",
    "start:quote": "cd services/quote-service && npm start",
    "start:user": "cd services/user-service/src/UserService.API && dotnet run",
    "start:gateway": "cd services/api-gateway && npm start",
    "start:frontend": "cd services/frontend && npm start",

    "logs": "docker-compose logs -f",
    "logs:auth": "docker-compose logs -f auth-service",
    "logs:quote": "docker-compose logs -f quote-service", 
    "logs:user": "docker-compose logs -f user-service",
    "logs:gateway": "docker-compose logs -f api-gateway",
    "logs:frontend": "docker-compose logs -f frontend"
  },
  "dependencies": {
    "bcrypt": "^5.1.1",
    "dotenv": "^16.4.5", 
    "jsonwebtoken": "^9.0.2"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.7",
    "env-cmd": "^10.1.0",
    "rimraf": "^5.0.0",
    "ts-jest": "^29.2.5",
    "typescript": "^5.0.0"
  }
}